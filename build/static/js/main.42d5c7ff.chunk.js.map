{"version":3,"sources":["logo.jpg","logo_2020.png","fonts/ItalianBreakfast-Regular.ttf","restaurant-menu.js","about.js","opening-hours.js","contact.js","page-component.js","main.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","RestaurantMenu","props","state","menu","title","price","description","event","preventDefault","this","setState","ppmenu","console","log","className","map","item","standard","liten","Component","About","OpeningHours","Contact","PageComponent","components","meny","oppettider","kontakt","var_resa","ComponentName","id","Main","resources","pages","list","src","logo","alt","Switch","Route","exact","path","route","MenuList","pageWrapId","menuItem","href","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.42d5c7ff.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.a0322464.jpg\";","module.exports = __webpack_public_path__ + \"static/media/logo_2020.eeb26e29.png\";","module.exports = __webpack_public_path__ + \"static/media/ItalianBreakfast-Regular.e49d5d42.ttf\";","import React, {Component} from 'react';\nimport './App.css';\nimport './burger-menu.css';\nimport menu from './pp-menu.json';\nimport logo from './logo.jpg';\nimport { slide as Menu } from 'react-burger-menu';\nimport resources from './resources.json';\nimport { timeout } from 'q';\n\nclass RestaurantMenu extends Component {\n\n  showSettings (event) {\n    event.preventDefault();\n    \n    \n  }\n\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      menu: [{\n        title: \" \",\n        price: \" \",\n        description: \" \"\n      }]\n    };\n  }\n\n  componentDidMount() {\n    this.setState({menu: menu.ppmenu});\n  }\n  render() {\n    console.log(this.state.menu);\n    \n    return (\n      <div className=\"RestaurantMenu\">\n        <div className=\"menu-container\">\n          <div className=\"page-title-container\"><h1>Meny</h1></div>\n          {this.state.menu.map(item => (\n            <div className=\"menu-entry-container\">\n              <h2>{item.title}</h2>\n              <p>{item.description}</p>\n              <p>Standard: {item.standard} kr</p>\n              <p>Liten: {item.liten} kr</p>\n            </div>\n          ))}\n        </div>\n        <div>\n          <h1>Extra tillval</h1>\n          <p>Vitlökssås 9kr</p>\n          <p>Het salsa 9kr</p>\n          <p>Parmesan 6 mån 9kr</p>\n          <p>Parmesan 12 mån 12kr</p>\n        </div>\n        <div>\n          <h1>Allergier</h1>\n          <p>Fråga!</p>\n          <p>Vi försöker anpassa oss men det kan ta en minut extra för dig.</p>\n        </div>\n      </div>\n    );    \n  }\n\n}\n\nexport default RestaurantMenu;","import React, {Component} from 'react';\nimport './App.css';\nimport './burger-menu.css';\nimport logo from './logo.jpg';\nimport { slide as Menu } from 'react-burger-menu';\nimport resources from './resources.json';\n\nclass About extends Component {\n\n  showSettings (event) {\n    event.preventDefault();\n    \n    \n  }\n\n\n  constructor(props) {\n    super(props);\n    this.state = {\n\n    };\n  }\n\n  render() {\n    return (\n      <div className=\"About page-component\">\n       \n        <div className=\"page-title-container\"><h1>Vår resa</h1></div>\n        <div>\n          <p>Pasta & Parmesan är en foodtruck som just nu finns i Markaryd i södra Sverige. Här lagar vi schysst pasta med goda pastasåser från grunden. Här finns något för alla - en vegansk pasta pesto med svamp eller en oxfilépasta för finsmakaren eller kanske en räkpasta med handpillade räkor till dig som inte gillar kött eller inte är förtjust i gräddiga såser.</p>\n          <p>Pasta Parmesan startades i april 2020 av grundaren Olivia Fritiofsson som spontant åkte och köpte foodtrucken i Hässleholm en solig söndag i oktober. Det hela filmades och klipptes ihop till korta videor som går att se på hennes YouTube-kanal \"Olivia Fritiofsson\". På kanalen publicerar hon även nya videos där man får följa med henne i vardagen som foodtrucker och möta problemen som uppstår för att sedan se hur allting går även om det verkar omöjligt ibland.</p>\n          <p>Hoppas vi ses, i foodtrucken eller på YouTube </p>\n          <p>MÅNGA KRAMAR</p>\n          <p>från Olivia</p>\n        </div>\n      </div>\n    );    \n  }\n\n}\n\nexport default About;\n\n\nconst MenuList = ({ list }) => (\n  <Menu pageWrapId={ \"page-wrap\"}>\n    {list.map(menuItem => (\n      <a id={menuItem.id} className=\"menu-item\" href={\"/\" + menuItem.id}>{menuItem.title}</a>\n    ))}\n  </Menu>\n);","import React, {Component} from 'react';\nimport './App.css';\nimport './burger-menu.css';\nimport logo from './logo.jpg';\nimport { slide as Menu } from 'react-burger-menu';\nimport resources from './resources.json';\n\nclass OpeningHours extends Component {\n\n  showSettings (event) {\n    event.preventDefault();\n    \n    \n  }\n\n\n  constructor(props) {\n    super(props);\n    this.state = {\n\n    };\n  }\n\n  render() {\n    return (\n      <div className=\"OpeningHours page-component\">\n        <div className=\"page-title-container\"><h1>Öppettider</h1></div>\n        <div><h3>Måndag - Fredag: 11.30 - 13:30</h3></div>\n      </div>\n    );    \n  }\n\n}\n\nexport default OpeningHours;","import React, {Component} from 'react';\nimport './App.css';\nimport './burger-menu.css';\nimport logo from './logo.jpg';\nimport { slide as Menu } from 'react-burger-menu';\nimport resources from './resources.json';\n\nclass Contact extends Component {\n\n  showSettings (event) {\n    event.preventDefault();\n    \n    \n  }\n\n\n  constructor(props) {\n    super(props);\n    this.state = {\n\n    };\n  }\n\n  render() {\n    return (\n      <div className=\"Contact page-component\">\n          <div className=\"page-title-container\"><h1>Kontakt</h1></div>\n          <div>\n            <p>Mail: info@pastaparmesan.se</p>\n            <p>Instagram: @pastaparmesan_foodtruck</p>\n          </div>\n      </div>\n    );    \n  }\n\n}\n\nexport default Contact;","import React, {Component} from 'react';\nimport './App.css';\nimport './burger-menu.css';\nimport logo from './logo.jpg';\nimport { slide as Menu } from 'react-burger-menu';\nimport resources from './resources.json';\nimport RestaurantMenu from './restaurant-menu.js';\nimport About from './about.js';\nimport OpeningHours from './opening-hours.js';\nimport Contact from './contact.js';\nimport { log } from 'util';\n\nclass PageComponent extends Component {\n\n  components = {\n    \"\": RestaurantMenu,\n    meny: RestaurantMenu,\n    oppettider: OpeningHours,\n    kontakt: Contact,\n    var_resa: About\n  };\n\n  render() {\n    const ComponentName = this.components[this.props.id ];\n    return <ComponentName />\n  }\n\n}\n\nexport default PageComponent;","import React, {Component} from 'react';\nimport './App.css';\nimport './burger-menu.css';\nimport logo from './logo_2020.png';\nimport { slide as Menu } from 'react-burger-menu';\nimport resources from './resources.json';\nimport { Route, Switch } from 'react-router-dom';\nimport RestaurantMenu from './restaurant-menu.js';\nimport PageComponent from './page-component.js';\n\nclass Main extends Component {\n\n  showSettings (event) {\n    event.preventDefault();  \n  }\n\n  constructor(props) {\n    super(props);\n    this.state = {\n\n    };\n  }\n\n  componentDidMount() {\n    console.log(resources.pages);\n    \n  }\n\n  render() {\n    return (\n      <div className=\"Main\" id=\"page-wrap\">\n        <div className=\"content-middle\">\n          <MenuList list={resources.pages}/>\n          <div className=\"top-row\">\n            <div className=\"logo-container\"><img className=\"logo\" src={logo} alt=\"Logo\" /></div>\n          </div>\n          <div className=\"middle-row\">\n            <Switch >\n              <Route exact path={\"/\"}>\n                <PageComponent id={\"\"}/>\n              </Route>\n              {resources.pages.map(route => (\n                  \n                <Route path={\"/\" + route.id}>\n                  <PageComponent id={route.id}/>\n                </Route> \n              ))}\n            </Switch>\n          </div>\n        </div>\n      </div>\n    );    \n  }\n\n}\n\nexport default Main;\n\n\nconst MenuList = ({ list }) => (\n  <Menu pageWrapId={\"page-wrap\"}>\n    {list.map(menuItem => (\n      <a id={menuItem.id} className=\"menu-item\" href={\"/\" + menuItem.id}>{menuItem.title}</a>\n    ))}\n  </Menu>\n);\n\nconst Routes = ({ list }) => (\n  <Switch >\n      <div> Switch </div>\n      {list.map(route => (\n        <Route path=\"/\" component={Example} />\n      ))}\n  \n    \n  </Switch>\n);\n\nconst Example = () => (\n    <div>Example</div>\n\n  );\n","import React from 'react';\nimport './App.css';\nimport Main from './main.js';\n  \nfunction App() {\n  return (\n    <div className=\"App\">\n      <Main />\n    </div>\n  );\n    \n  \n};\n\nexport default App;\n\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport './fonts/ItalianBreakfast-Regular.ttf';\nimport {BrowserRouter as Router} from 'react-router-dom';\n\n\nReactDOM.render(<Router><App /></Router>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}